/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShopFactory, ShopFactoryInterface } from "../ShopFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_shopMakerAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allShops",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "string",
        name: "phone",
        type: "string",
      },
      {
        internalType: "string",
        name: "image",
        type: "string",
      },
    ],
    name: "createShop",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deleteAddr",
        type: "address",
      },
    ],
    name: "deleteShop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchAllShops",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selfDestruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setShopPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260006002553480156200001657600080fd5b506040516200166f3803806200166f83398181016040528101906200003c919062000187565b6200005c62000050620000a460201b60201c565b620000ac60201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000201565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200018181620001e7565b92915050565b6000602082840312156200019a57600080fd5b6000620001aa8482850162000170565b91505092915050565b6000620001c082620001c7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001f281620001b3565b8114620001fe57600080fd5b50565b61145e80620002116000396000f3fe6080604052600436106100a05760003560e01c806396195dca1161006457806396195dca1461015b5780639cb8a26a14610198578063abc47baa146101af578063b8fd33a7146101d8578063e7bfea5014610208578063f2fde38b14610231576100a7565b806312065fe0146100ac5780633ccfd60b146100d75780636f0571e1146100ee578063715018a6146101195780638da5cb5b14610130576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100c161025a565b6040516100ce91906110a2565b60405180910390f35b3480156100e357600080fd5b506100ec610262565b005b3480156100fa57600080fd5b50610103610327565b6040516101109190611020565b60405180910390f35b34801561012557600080fd5b5061012e6103b5565b005b34801561013c57600080fd5b5061014561043d565b6040516101529190610f81565b60405180910390f35b34801561016757600080fd5b50610182600480360381019061017d9190610e13565b610466565b60405161018f9190610f81565b60405180910390f35b3480156101a457600080fd5b506101ad6104a5565b005b3480156101bb57600080fd5b506101d660048036038101906101d19190610e13565b610541565b005b6101f260048036038101906101ed9190610d24565b6105c7565b6040516101ff9190610f81565b60405180910390f35b34801561021457600080fd5b5061022f600480360381019061022a9190610cd2565b61073f565b005b34801561023d57600080fd5b5061025860048036038101906102539190610cd2565b6108ee565b005b600047905090565b61026a6109e6565b73ffffffffffffffffffffffffffffffffffffffff1661028861043d565b73ffffffffffffffffffffffffffffffffffffffff16146102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d590611062565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610324573d6000803e3d6000fd5b50565b606060018054806020026020016040519081016040528092919081815260200182805480156103ab57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610361575b5050505050905090565b6103bd6109e6565b73ffffffffffffffffffffffffffffffffffffffff166103db61043d565b73ffffffffffffffffffffffffffffffffffffffff1614610431576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042890611062565b60405180910390fd5b61043b60006109ee565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001818154811061047657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104ad6109e6565b73ffffffffffffffffffffffffffffffffffffffff166104cb61043d565b73ffffffffffffffffffffffffffffffffffffffff1614610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890611062565b60405180910390fd5b61052961043d565b73ffffffffffffffffffffffffffffffffffffffff16ff5b6105496109e6565b73ffffffffffffffffffffffffffffffffffffffff1661056761043d565b73ffffffffffffffffffffffffffffffffffffffff16146105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490611062565b60405180910390fd5b8060028190555050565b600060025434101561060e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060590611082565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166308c2a289338a8a8a8a8a6040518763ffffffff1660e01b815260040161067a96959493929190610f9c565b602060405180830381600087803b15801561069457600080fd5b505af11580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190610cfb565b90506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550809250505095945050505050565b6107476109e6565b73ffffffffffffffffffffffffffffffffffffffff1661076561043d565b73ffffffffffffffffffffffffffffffffffffffff16146107bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b290611062565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff16639cb8a26a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561080857600080fd5b505af115801561081c573d6000803e3d6000fd5b5050505060005b6001805490508110156108e9578273ffffffffffffffffffffffffffffffffffffffff1660018281548110610881577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108d6576108d181610ab2565b6108e9565b80806108e1906112a1565b915050610823565b505050565b6108f66109e6565b73ffffffffffffffffffffffffffffffffffffffff1661091461043d565b73ffffffffffffffffffffffffffffffffffffffff161461096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096190611062565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d190611042565b60405180910390fd5b6109e3816109ee565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008190505b60018080549050610ac991906111be565b811015610bba5760018082610ade9190611168565b81548110610b15577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660018281548110610b90577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a905050508080610bb2906112a1565b915050610ab8565b506001805480610bf3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550565b6000610c3e610c39846110e2565b6110bd565b905082815260208101848484011115610c5657600080fd5b610c6184828561122e565b509392505050565b600081359050610c78816113fa565b92915050565b600081519050610c8d816113fa565b92915050565b600082601f830112610ca457600080fd5b8135610cb4848260208601610c2b565b91505092915050565b600081359050610ccc81611411565b92915050565b600060208284031215610ce457600080fd5b6000610cf284828501610c69565b91505092915050565b600060208284031215610d0d57600080fd5b6000610d1b84828501610c7e565b91505092915050565b600080600080600060a08688031215610d3c57600080fd5b600086013567ffffffffffffffff811115610d5657600080fd5b610d6288828901610c93565b955050602086013567ffffffffffffffff811115610d7f57600080fd5b610d8b88828901610c93565b945050604086013567ffffffffffffffff811115610da857600080fd5b610db488828901610c93565b935050606086013567ffffffffffffffff811115610dd157600080fd5b610ddd88828901610c93565b925050608086013567ffffffffffffffff811115610dfa57600080fd5b610e0688828901610c93565b9150509295509295909350565b600060208284031215610e2557600080fd5b6000610e3384828501610cbd565b91505092915050565b6000610e488383610e54565b60208301905092915050565b610e5d816111f2565b82525050565b610e6c816111f2565b82525050565b6000610e7d82611123565b610e878185611146565b9350610e9283611113565b8060005b83811015610ec3578151610eaa8882610e3c565b9750610eb583611139565b925050600181019050610e96565b5085935050505092915050565b6000610edb8261112e565b610ee58185611157565b9350610ef581856020860161123d565b610efe81611348565b840191505092915050565b6000610f16602683611157565b9150610f2182611359565b604082019050919050565b6000610f39602083611157565b9150610f44826113a8565b602082019050919050565b6000610f5c600383611157565b9150610f67826113d1565b602082019050919050565b610f7b81611224565b82525050565b6000602082019050610f966000830184610e63565b92915050565b600060c082019050610fb16000830189610e63565b8181036020830152610fc38188610ed0565b90508181036040830152610fd78187610ed0565b90508181036060830152610feb8186610ed0565b90508181036080830152610fff8185610ed0565b905081810360a08301526110138184610ed0565b9050979650505050505050565b6000602082019050818103600083015261103a8184610e72565b905092915050565b6000602082019050818103600083015261105b81610f09565b9050919050565b6000602082019050818103600083015261107b81610f2c565b9050919050565b6000602082019050818103600083015261109b81610f4f565b9050919050565b60006020820190506110b76000830184610f72565b92915050565b60006110c76110d8565b90506110d38282611270565b919050565b6000604051905090565b600067ffffffffffffffff8211156110fd576110fc611319565b5b61110682611348565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061117382611224565b915061117e83611224565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111b3576111b26112ea565b5b828201905092915050565b60006111c982611224565b91506111d483611224565b9250828210156111e7576111e66112ea565b5b828203905092915050565b60006111fd82611204565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561125b578082015181840152602081019050611240565b8381111561126a576000848401525b50505050565b61127982611348565b810181811067ffffffffffffffff8211171561129857611297611319565b5b80604052505050565b60006112ac82611224565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112df576112de6112ea565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4353300000000000000000000000000000000000000000000000000000000000600082015250565b611403816111f2565b811461140e57600080fd5b50565b61141a81611224565b811461142557600080fd5b5056fea264697066735822122044f3f657746af59dee75fa0e9b576ea889f27ca81f4a2deb94d2f0e01d4cd6a564736f6c63430008040033";

type ShopFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopFactory__factory extends ContractFactory {
  constructor(...args: ShopFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopFactory";
  }

  deploy(
    _shopMakerAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopFactory> {
    return super.deploy(
      _shopMakerAddr,
      overrides || {}
    ) as Promise<ShopFactory>;
  }
  getDeployTransaction(
    _shopMakerAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_shopMakerAddr, overrides || {});
  }
  attach(address: string): ShopFactory {
    return super.attach(address) as ShopFactory;
  }
  connect(signer: Signer): ShopFactory__factory {
    return super.connect(signer) as ShopFactory__factory;
  }
  static readonly contractName: "ShopFactory";
  public readonly contractName: "ShopFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopFactoryInterface {
    return new utils.Interface(_abi) as ShopFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopFactory {
    return new Contract(address, _abi, signerOrProvider) as ShopFactory;
  }
}
