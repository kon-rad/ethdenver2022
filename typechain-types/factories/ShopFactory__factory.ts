/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShopFactory, ShopFactoryInterface } from "../ShopFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_shopTemplate",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftTemplate",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "shopAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "ShopCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allShops",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_image",
        type: "string",
      },
      {
        internalType: "string",
        name: "nftSymbol_",
        type: "string",
      },
    ],
    name: "createShop",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deleteAddr",
        type: "address",
      },
    ],
    name: "deleteShop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchAllShops",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selfDestruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setShopPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shopCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600060025560006003553480156200001b57600080fd5b5060405162001861380380620018618339818101604052810190620000419190620001ce565b6200006162000055620000eb60201b60201c565b620000f360201b60201c565b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c88162000243565b92915050565b60008060408385031215620001e257600080fd5b6000620001f285828601620001b7565b92505060206200020585828601620001b7565b9150509250929050565b60006200021c8262000223565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200024e816200020f565b81146200025a57600080fd5b50565b6115f4806200026d6000396000f3fe6080604052600436106100ab5760003560e01c806392bec5ee1161006457806392bec5ee1461019157806396195dca146101c15780639cb8a26a146101fe578063abc47baa14610215578063e7bfea501461023e578063f2fde38b14610267576100b2565b80630a747ed5146100b757806312065fe0146100e25780633ccfd60b1461010d5780636f0571e114610124578063715018a61461014f5780638da5cb5b14610166576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100cc610290565b6040516100d9919061122d565b60405180910390f35b3480156100ee57600080fd5b506100f7610296565b604051610104919061122d565b60405180910390f35b34801561011957600080fd5b5061012261029e565b005b34801561013057600080fd5b50610139610363565b60405161014691906111ab565b60405180910390f35b34801561015b57600080fd5b506101646103f1565b005b34801561017257600080fd5b5061017b610479565b60405161018891906110ce565b60405180910390f35b6101ab60048036038101906101a69190610e81565b6104a2565b6040516101b891906110ce565b60405180910390f35b3480156101cd57600080fd5b506101e860048036038101906101e39190610f18565b61070f565b6040516101f591906110ce565b60405180910390f35b34801561020a57600080fd5b5061021361074e565b005b34801561022157600080fd5b5061023c60048036038101906102379190610f18565b6107ea565b005b34801561024a57600080fd5b5061026560048036038101906102609190610e58565b610870565b005b34801561027357600080fd5b5061028e60048036038101906102899190610e58565b610a1f565b005b60035481565b600047905090565b6102a6610b17565b73ffffffffffffffffffffffffffffffffffffffff166102c4610479565b73ffffffffffffffffffffffffffffffffffffffff161461031a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610311906111ed565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610360573d6000803e3d6000fd5b50565b606060018054806020026020016040519081016040528092919081815260200182805480156103e757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161039d575b5050505050905090565b6103f9610b17565b73ffffffffffffffffffffffffffffffffffffffff16610417610479565b73ffffffffffffffffffffffffffffffffffffffff161461046d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610464906111ed565b60405180910390fd5b6104776000610b1f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006002543410156104e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e09061120d565b60405180910390fd5b6000610516600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610be3565b90506000610545600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610be3565b90508073ffffffffffffffffffffffffffffffffffffffff166347b70db033888860035430886040518763ffffffff1660e01b815260040161058c9695949392919061113c565b600060405180830381600087803b1580156105a657600080fd5b505af11580156105ba573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16632016a0d2338389886040518563ffffffff1660e01b81526004016105fd94939291906110e9565b600060405180830381600087803b15801561061757600080fd5b505af115801561062b573d6000803e3d6000fd5b505050508560405161063d91906110b7565b60405180910390208173ffffffffffffffffffffffffffffffffffffffff167f45277a23a38027df0b3b8ce31022d3988d3a5b8b8d753608ab96b7d20b40bab360405160405180910390a36001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360008154809291906106fe90611437565b919050555080925050509392505050565b6001818154811061071f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610756610b17565b73ffffffffffffffffffffffffffffffffffffffff16610774610479565b73ffffffffffffffffffffffffffffffffffffffff16146107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c1906111ed565b60405180910390fd5b6107d2610479565b73ffffffffffffffffffffffffffffffffffffffff16ff5b6107f2610b17565b73ffffffffffffffffffffffffffffffffffffffff16610810610479565b73ffffffffffffffffffffffffffffffffffffffff1614610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d906111ed565b60405180910390fd5b8060028190555050565b610878610b17565b73ffffffffffffffffffffffffffffffffffffffff16610896610479565b73ffffffffffffffffffffffffffffffffffffffff16146108ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e3906111ed565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff16639cb8a26a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561093957600080fd5b505af115801561094d573d6000803e3d6000fd5b5050505060005b600180549050811015610a1a578273ffffffffffffffffffffffffffffffffffffffff16600182815481106109b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a0757610a0281610c4d565b610a1a565b8080610a1290611437565b915050610954565b505050565b610a27610b17565b73ffffffffffffffffffffffffffffffffffffffff16610a45610479565b73ffffffffffffffffffffffffffffffffffffffff1614610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a92906111ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b02906111cd565b60405180910390fd5b610b1481610b1f565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f092505050919050565b60008190505b60018080549050610c649190611354565b811015610d555760018082610c7991906112fe565b81548110610cb0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660018281548110610d2b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a905050508080610d4d90611437565b915050610c53565b506001805480610d8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550565b6000610dd9610dd48461126d565b611248565b905082815260208101848484011115610df157600080fd5b610dfc8482856113c4565b509392505050565b600081359050610e1381611590565b92915050565b600082601f830112610e2a57600080fd5b8135610e3a848260208601610dc6565b91505092915050565b600081359050610e52816115a7565b92915050565b600060208284031215610e6a57600080fd5b6000610e7884828501610e04565b91505092915050565b600080600060608486031215610e9657600080fd5b600084013567ffffffffffffffff811115610eb057600080fd5b610ebc86828701610e19565b935050602084013567ffffffffffffffff811115610ed957600080fd5b610ee586828701610e19565b925050604084013567ffffffffffffffff811115610f0257600080fd5b610f0e86828701610e19565b9150509250925092565b600060208284031215610f2a57600080fd5b6000610f3884828501610e43565b91505092915050565b6000610f4d8383610f59565b60208301905092915050565b610f6281611388565b82525050565b610f7181611388565b82525050565b6000610f82826112ae565b610f8c81856112d1565b9350610f978361129e565b8060005b83811015610fc8578151610faf8882610f41565b9750610fba836112c4565b925050600181019050610f9b565b5085935050505092915050565b6000610fe0826112b9565b610fea81856112e2565b9350610ffa8185602086016113d3565b611003816114de565b840191505092915050565b6000611019826112b9565b61102381856112f3565b93506110338185602086016113d3565b80840191505092915050565b600061104c6026836112e2565b9150611057826114ef565b604082019050919050565b600061106f6020836112e2565b915061107a8261153e565b602082019050919050565b60006110926003836112e2565b915061109d82611567565b602082019050919050565b6110b1816113ba565b82525050565b60006110c3828461100e565b915081905092915050565b60006020820190506110e36000830184610f68565b92915050565b60006080820190506110fe6000830187610f68565b61110b6020830186610f68565b818103604083015261111d8185610fd5565b905081810360608301526111318184610fd5565b905095945050505050565b600060c0820190506111516000830189610f68565b81810360208301526111638188610fd5565b905081810360408301526111778187610fd5565b905061118660608301866110a8565b6111936080830185610f68565b6111a060a0830184610f68565b979650505050505050565b600060208201905081810360008301526111c58184610f77565b905092915050565b600060208201905081810360008301526111e68161103f565b9050919050565b6000602082019050818103600083015261120681611062565b9050919050565b6000602082019050818103600083015261122681611085565b9050919050565b600060208201905061124260008301846110a8565b92915050565b6000611252611263565b905061125e8282611406565b919050565b6000604051905090565b600067ffffffffffffffff821115611288576112876114af565b5b611291826114de565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611309826113ba565b9150611314836113ba565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561134957611348611480565b5b828201905092915050565b600061135f826113ba565b915061136a836113ba565b92508282101561137d5761137c611480565b5b828203905092915050565b60006113938261139a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156113f15780820151818401526020810190506113d6565b83811115611400576000848401525b50505050565b61140f826114de565b810181811067ffffffffffffffff8211171561142e5761142d6114af565b5b80604052505050565b6000611442826113ba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561147557611474611480565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4353300000000000000000000000000000000000000000000000000000000000600082015250565b61159981611388565b81146115a457600080fd5b50565b6115b0816113ba565b81146115bb57600080fd5b5056fea2646970667358221220a1b16862f9752dcccbc39e69063ae609c29e5335c8fd553db18849910925fb1e64736f6c63430008040033";

type ShopFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopFactory__factory extends ContractFactory {
  constructor(...args: ShopFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopFactory";
  }

  deploy(
    _shopTemplate: string,
    _nftTemplate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopFactory> {
    return super.deploy(
      _shopTemplate,
      _nftTemplate,
      overrides || {}
    ) as Promise<ShopFactory>;
  }
  getDeployTransaction(
    _shopTemplate: string,
    _nftTemplate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _shopTemplate,
      _nftTemplate,
      overrides || {}
    );
  }
  attach(address: string): ShopFactory {
    return super.attach(address) as ShopFactory;
  }
  connect(signer: Signer): ShopFactory__factory {
    return super.connect(signer) as ShopFactory__factory;
  }
  static readonly contractName: "ShopFactory";
  public readonly contractName: "ShopFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopFactoryInterface {
    return new utils.Interface(_abi) as ShopFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopFactory {
    return new Contract(address, _abi, signerOrProvider) as ShopFactory;
  }
}
