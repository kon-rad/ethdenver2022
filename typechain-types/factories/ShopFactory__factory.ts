/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShopFactory, ShopFactoryInterface } from "../ShopFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_shopTemplate",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftTemplate",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "shopAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "ShopCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allShops",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_image",
        type: "string",
      },
    ],
    name: "createShop",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deleteAddr",
        type: "address",
      },
    ],
    name: "deleteShop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchAllShops",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selfDestruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setShopPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shopCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600060025560006003553480156200001b57600080fd5b5060405162001807380380620018078339818101604052810190620000419190620001ce565b6200006162000055620000eb60201b60201c565b620000f360201b60201c565b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c88162000243565b92915050565b60008060408385031215620001e257600080fd5b6000620001f285828601620001b7565b92505060206200020585828601620001b7565b9150509250929050565b60006200021c8262000223565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200024e816200020f565b81146200025a57600080fd5b50565b61159a806200026d6000396000f3fe6080604052600436106100ab5760003560e01c806396195dca1161006457806396195dca146101915780639cb8a26a146101ce578063abc47baa146101e5578063b4abc3811461020e578063e7bfea501461023e578063f2fde38b14610267576100b2565b80630a747ed5146100b757806312065fe0146100e25780633ccfd60b1461010d5780636f0571e114610124578063715018a61461014f5780638da5cb5b14610166576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100cc610290565b6040516100d991906111d3565b60405180910390f35b3480156100ee57600080fd5b506100f7610296565b60405161010491906111d3565b60405180910390f35b34801561011957600080fd5b5061012261029e565b005b34801561013057600080fd5b50610139610363565b6040516101469190611151565b60405180910390f35b34801561015b57600080fd5b506101646103f1565b005b34801561017257600080fd5b5061017b610479565b604051610188919061109e565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b39190610ee8565b6104a2565b6040516101c5919061109e565b60405180910390f35b3480156101da57600080fd5b506101e36104e1565b005b3480156101f157600080fd5b5061020c60048036038101906102079190610ee8565b61057d565b005b61022860048036038101906102239190610e7c565b610603565b604051610235919061109e565b60405180910390f35b34801561024a57600080fd5b5061026560048036038101906102609190610e53565b61086b565b005b34801561027357600080fd5b5061028e60048036038101906102899190610e53565b610a1a565b005b60035481565b600047905090565b6102a6610b12565b73ffffffffffffffffffffffffffffffffffffffff166102c4610479565b73ffffffffffffffffffffffffffffffffffffffff161461031a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031190611193565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610360573d6000803e3d6000fd5b50565b606060018054806020026020016040519081016040528092919081815260200182805480156103e757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161039d575b5050505050905090565b6103f9610b12565b73ffffffffffffffffffffffffffffffffffffffff16610417610479565b73ffffffffffffffffffffffffffffffffffffffff161461046d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046490611193565b60405180910390fd5b6104776000610b1a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600181815481106104b257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104e9610b12565b73ffffffffffffffffffffffffffffffffffffffff16610507610479565b73ffffffffffffffffffffffffffffffffffffffff161461055d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055490611193565b60405180910390fd5b610565610479565b73ffffffffffffffffffffffffffffffffffffffff16ff5b610585610b12565b73ffffffffffffffffffffffffffffffffffffffff166105a3610479565b73ffffffffffffffffffffffffffffffffffffffff16146105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090611193565b60405180910390fd5b8060028190555050565b600060025434101561064a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610641906111b3565b60405180910390fd5b6000610677600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610bde565b905060006106a6600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610bde565b90508073ffffffffffffffffffffffffffffffffffffffff166347b70db033878760035430886040518763ffffffff1660e01b81526004016106ed969594939291906110e2565b600060405180830381600087803b15801561070757600080fd5b505af115801561071b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663485cc95533836040518363ffffffff1660e01b815260040161075a9291906110b9565b600060405180830381600087803b15801561077457600080fd5b505af1158015610788573d6000803e3d6000fd5b505050508460405161079a9190611087565b60405180910390208173ffffffffffffffffffffffffffffffffffffffff167f45277a23a38027df0b3b8ce31022d3988d3a5b8b8d753608ab96b7d20b40bab360405160405180910390a36001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003600081548092919061085b906113dd565b9190505550809250505092915050565b610873610b12565b73ffffffffffffffffffffffffffffffffffffffff16610891610479565b73ffffffffffffffffffffffffffffffffffffffff16146108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de90611193565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff16639cb8a26a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561093457600080fd5b505af1158015610948573d6000803e3d6000fd5b5050505060005b600180549050811015610a15578273ffffffffffffffffffffffffffffffffffffffff16600182815481106109ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a02576109fd81610c48565b610a15565b8080610a0d906113dd565b91505061094f565b505050565b610a22610b12565b73ffffffffffffffffffffffffffffffffffffffff16610a40610479565b73ffffffffffffffffffffffffffffffffffffffff1614610a96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8d90611193565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd90611173565b60405180910390fd5b610b0f81610b1a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f092505050919050565b60008190505b60018080549050610c5f91906112fa565b811015610d505760018082610c7491906112a4565b81548110610cab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660018281548110610d26577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a905050508080610d48906113dd565b915050610c4e565b506001805480610d89577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550565b6000610dd4610dcf84611213565b6111ee565b905082815260208101848484011115610dec57600080fd5b610df784828561136a565b509392505050565b600081359050610e0e81611536565b92915050565b600082601f830112610e2557600080fd5b8135610e35848260208601610dc1565b91505092915050565b600081359050610e4d8161154d565b92915050565b600060208284031215610e6557600080fd5b6000610e7384828501610dff565b91505092915050565b60008060408385031215610e8f57600080fd5b600083013567ffffffffffffffff811115610ea957600080fd5b610eb585828601610e14565b925050602083013567ffffffffffffffff811115610ed257600080fd5b610ede85828601610e14565b9150509250929050565b600060208284031215610efa57600080fd5b6000610f0884828501610e3e565b91505092915050565b6000610f1d8383610f29565b60208301905092915050565b610f328161132e565b82525050565b610f418161132e565b82525050565b6000610f5282611254565b610f5c8185611277565b9350610f6783611244565b8060005b83811015610f98578151610f7f8882610f11565b9750610f8a8361126a565b925050600181019050610f6b565b5085935050505092915050565b6000610fb08261125f565b610fba8185611288565b9350610fca818560208601611379565b610fd381611484565b840191505092915050565b6000610fe98261125f565b610ff38185611299565b9350611003818560208601611379565b80840191505092915050565b600061101c602683611288565b915061102782611495565b604082019050919050565b600061103f602083611288565b915061104a826114e4565b602082019050919050565b6000611062600383611288565b915061106d8261150d565b602082019050919050565b61108181611360565b82525050565b60006110938284610fde565b915081905092915050565b60006020820190506110b36000830184610f38565b92915050565b60006040820190506110ce6000830185610f38565b6110db6020830184610f38565b9392505050565b600060c0820190506110f76000830189610f38565b81810360208301526111098188610fa5565b9050818103604083015261111d8187610fa5565b905061112c6060830186611078565b6111396080830185610f38565b61114660a0830184610f38565b979650505050505050565b6000602082019050818103600083015261116b8184610f47565b905092915050565b6000602082019050818103600083015261118c8161100f565b9050919050565b600060208201905081810360008301526111ac81611032565b9050919050565b600060208201905081810360008301526111cc81611055565b9050919050565b60006020820190506111e86000830184611078565b92915050565b60006111f8611209565b905061120482826113ac565b919050565b6000604051905090565b600067ffffffffffffffff82111561122e5761122d611455565b5b61123782611484565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006112af82611360565b91506112ba83611360565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112ef576112ee611426565b5b828201905092915050565b600061130582611360565b915061131083611360565b92508282101561132357611322611426565b5b828203905092915050565b600061133982611340565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561139757808201518184015260208101905061137c565b838111156113a6576000848401525b50505050565b6113b582611484565b810181811067ffffffffffffffff821117156113d4576113d3611455565b5b80604052505050565b60006113e882611360565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561141b5761141a611426565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4353300000000000000000000000000000000000000000000000000000000000600082015250565b61153f8161132e565b811461154a57600080fd5b50565b61155681611360565b811461156157600080fd5b5056fea264697066735822122046d0011340ef152627923a660a8d17c12bca3486be8c1d0448897bba7af2a72964736f6c63430008040033";

type ShopFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopFactory__factory extends ContractFactory {
  constructor(...args: ShopFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopFactory";
  }

  deploy(
    _shopTemplate: string,
    _nftTemplate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopFactory> {
    return super.deploy(
      _shopTemplate,
      _nftTemplate,
      overrides || {}
    ) as Promise<ShopFactory>;
  }
  getDeployTransaction(
    _shopTemplate: string,
    _nftTemplate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _shopTemplate,
      _nftTemplate,
      overrides || {}
    );
  }
  attach(address: string): ShopFactory {
    return super.attach(address) as ShopFactory;
  }
  connect(signer: Signer): ShopFactory__factory {
    return super.connect(signer) as ShopFactory__factory;
  }
  static readonly contractName: "ShopFactory";
  public readonly contractName: "ShopFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopFactoryInterface {
    return new utils.Interface(_abi) as ShopFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopFactory {
    return new Contract(address, _abi, signerOrProvider) as ShopFactory;
  }
}
