/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShopFactory, ShopFactoryInterface } from "../ShopFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_shopTemplate",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftTemplate",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "shopAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "ShopCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allShops",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_image",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tags",
        type: "string",
      },
    ],
    name: "createShop",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deleteAddr",
        type: "address",
      },
    ],
    name: "deleteShop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchAllShops",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selfDestruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setShopPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shopCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600060025560006003553480156200001b57600080fd5b5060405162001b3d38038062001b3d8339818101604052810190620000419190620001ce565b6200006162000055620000eb60201b60201c565b620000f360201b60201c565b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c88162000243565b92915050565b60008060408385031215620001e257600080fd5b6000620001f285828601620001b7565b92505060206200020585828601620001b7565b9150509250929050565b60006200021c8262000223565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200024e816200020f565b81146200025a57600080fd5b50565b6118d0806200026d6000396000f3fe6080604052600436106100ab5760003560e01c806392bec5ee1161006457806392bec5ee1461019157806396195dca146101c15780639cb8a26a146101fe578063abc47baa14610215578063e7bfea501461023e578063f2fde38b14610267576100b2565b80630a747ed5146100b757806312065fe0146100e25780633ccfd60b1461010d5780636f0571e114610124578063715018a61461014f5780638da5cb5b14610166576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100cc610290565b6040516100d9919061146b565b60405180910390f35b3480156100ee57600080fd5b506100f7610296565b604051610104919061146b565b60405180910390f35b34801561011957600080fd5b5061012261029e565b005b34801561013057600080fd5b50610139610363565b60405161014691906113a9565b60405180910390f35b34801561015b57600080fd5b506101646103f1565b005b34801561017257600080fd5b5061017b610479565b604051610188919061130a565b60405180910390f35b6101ab60048036038101906101a69190611077565b6104a2565b6040516101b8919061130a565b60405180910390f35b3480156101cd57600080fd5b506101e860048036038101906101e3919061110e565b61072a565b6040516101f5919061130a565b60405180910390f35b34801561020a57600080fd5b50610213610769565b005b34801561022157600080fd5b5061023c6004803603810190610237919061110e565b610805565b005b34801561024a57600080fd5b506102656004803603810190610260919061104e565b61088b565b005b34801561027357600080fd5b5061028e6004803603810190610289919061104e565b610a3a565b005b60035481565b600047905090565b6102a6610b32565b73ffffffffffffffffffffffffffffffffffffffff166102c4610479565b73ffffffffffffffffffffffffffffffffffffffff161461031a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103119061142b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610360573d6000803e3d6000fd5b50565b606060018054806020026020016040519081016040528092919081815260200182805480156103e757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161039d575b5050505050905090565b6103f9610b32565b73ffffffffffffffffffffffffffffffffffffffff16610417610479565b73ffffffffffffffffffffffffffffffffffffffff161461046d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104649061142b565b60405180910390fd5b6104776000610b3a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006002543410156104e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e09061144b565b60405180910390fd5b6101186104f585610bfe565b10610535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052c9061140b565b60405180910390fd5b61011861054183610bfe565b10610581576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610578906113eb565b60405180910390fd5b60006105ae600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610dd9565b90508073ffffffffffffffffffffffffffffffffffffffff1663fa4fee983387878760035430600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518863ffffffff1660e01b81526004016106199796959493929190611325565b600060405180830381600087803b15801561063357600080fd5b505af1158015610647573d6000803e3d6000fd5b505050508460405161065991906112f3565b60405180910390208173ffffffffffffffffffffffffffffffffffffffff167f45277a23a38027df0b3b8ce31022d3988d3a5b8b8d753608ab96b7d20b40bab360405160405180910390a36001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003600081548092919061071a90611675565b9190505550809150509392505050565b6001818154811061073a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610771610b32565b73ffffffffffffffffffffffffffffffffffffffff1661078f610479565b73ffffffffffffffffffffffffffffffffffffffff16146107e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dc9061142b565b60405180910390fd5b6107ed610479565b73ffffffffffffffffffffffffffffffffffffffff16ff5b61080d610b32565b73ffffffffffffffffffffffffffffffffffffffff1661082b610479565b73ffffffffffffffffffffffffffffffffffffffff1614610881576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108789061142b565b60405180910390fd5b8060028190555050565b610893610b32565b73ffffffffffffffffffffffffffffffffffffffff166108b1610479565b73ffffffffffffffffffffffffffffffffffffffff1614610907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fe9061142b565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff16639cb8a26a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561095457600080fd5b505af1158015610968573d6000803e3d6000fd5b5050505060005b600180549050811015610a35578273ffffffffffffffffffffffffffffffffffffffff16600182815481106109cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a2257610a1d81610e43565b610a35565b8080610a2d90611675565b91505061096f565b505050565b610a42610b32565b73ffffffffffffffffffffffffffffffffffffffff16610a60610479565b73ffffffffffffffffffffffffffffffffffffffff1614610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad9061142b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1d906113cb565b60405180910390fd5b610b2f81610b3a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060008084519050600092505b80821015610dce576000858381518110610c50577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b9050608060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610c9f57600183610c98919061153c565b9250610dba565b60e060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610ce157600283610cda919061153c565b9250610db9565b60f060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610d2357600383610d1c919061153c565b9250610db8565b60f8801b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610d6457600483610d5d919061153c565b9250610db7565b60fc60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610da657600583610d9f919061153c565b9250610db6565b600683610db3919061153c565b92505b5b5b5b5b508280610dc690611675565b935050610c0d565b829350505050919050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f092505050919050565b60008190505b60018080549050610e5a9190611592565b811015610f4b5760018082610e6f919061153c565b81548110610ea6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660018281548110610f21577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a905050508080610f4390611675565b915050610e49565b506001805480610f84577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550565b6000610fcf610fca846114ab565b611486565b905082815260208101848484011115610fe757600080fd5b610ff2848285611602565b509392505050565b6000813590506110098161186c565b92915050565b600082601f83011261102057600080fd5b8135611030848260208601610fbc565b91505092915050565b60008135905061104881611883565b92915050565b60006020828403121561106057600080fd5b600061106e84828501610ffa565b91505092915050565b60008060006060848603121561108c57600080fd5b600084013567ffffffffffffffff8111156110a657600080fd5b6110b28682870161100f565b935050602084013567ffffffffffffffff8111156110cf57600080fd5b6110db8682870161100f565b925050604084013567ffffffffffffffff8111156110f857600080fd5b6111048682870161100f565b9150509250925092565b60006020828403121561112057600080fd5b600061112e84828501611039565b91505092915050565b6000611143838361114f565b60208301905092915050565b611158816115c6565b82525050565b611167816115c6565b82525050565b6000611178826114ec565b611182818561150f565b935061118d836114dc565b8060005b838110156111be5781516111a58882611137565b97506111b083611502565b925050600181019050611191565b5085935050505092915050565b60006111d6826114f7565b6111e08185611520565b93506111f0818560208601611611565b6111f98161171c565b840191505092915050565b600061120f826114f7565b6112198185611531565b9350611229818560208601611611565b80840191505092915050565b6000611242602683611520565b915061124d8261172d565b604082019050919050565b6000611265602b83611520565b91506112708261177c565b604082019050919050565b6000611288602b83611520565b9150611293826117cb565b604082019050919050565b60006112ab602083611520565b91506112b68261181a565b602082019050919050565b60006112ce600383611520565b91506112d982611843565b602082019050919050565b6112ed816115f8565b82525050565b60006112ff8284611204565b915081905092915050565b600060208201905061131f600083018461115e565b92915050565b600060e08201905061133a600083018a61115e565b818103602083015261134c81896111cb565b9050818103604083015261136081886111cb565b9050818103606083015261137481876111cb565b905061138360808301866112e4565b61139060a083018561115e565b61139d60c083018461115e565b98975050505050505050565b600060208201905081810360008301526113c3818461116d565b905092915050565b600060208201905081810360008301526113e481611235565b9050919050565b6000602082019050818103600083015261140481611258565b9050919050565b600060208201905081810360008301526114248161127b565b9050919050565b600060208201905081810360008301526114448161129e565b9050919050565b60006020820190508181036000830152611464816112c1565b9050919050565b600060208201905061148060008301846112e4565b92915050565b60006114906114a1565b905061149c8282611644565b919050565b6000604051905090565b600067ffffffffffffffff8211156114c6576114c56116ed565b5b6114cf8261171c565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611547826115f8565b9150611552836115f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611587576115866116be565b5b828201905092915050565b600061159d826115f8565b91506115a8836115f8565b9250828210156115bb576115ba6116be565b5b828203905092915050565b60006115d1826115d8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561162f578082015181840152602081019050611614565b8381111561163e576000848401525b50505050565b61164d8261171c565b810181811067ffffffffffffffff8211171561166c5761166b6116ed565b5b80604052505050565b6000611680826115f8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116b3576116b26116be565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53463a30312054616773206d757374206265206c657373207468616e2032383060008201527f2063686172616374657273000000000000000000000000000000000000000000602082015250565b7f53463a3031204e616d65206d757374206265206c657373207468616e2032383060008201527f2063686172616374657273000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4353300000000000000000000000000000000000000000000000000000000000600082015250565b611875816115c6565b811461188057600080fd5b50565b61188c816115f8565b811461189757600080fd5b5056fea2646970667358221220fd53a2f8c9656482a921d1ecb617467de604a2269f28990c9fe6fd543a0344de64736f6c63430008040033";

type ShopFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShopFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShopFactory__factory extends ContractFactory {
  constructor(...args: ShopFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ShopFactory";
  }

  deploy(
    _shopTemplate: string,
    _nftTemplate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ShopFactory> {
    return super.deploy(
      _shopTemplate,
      _nftTemplate,
      overrides || {}
    ) as Promise<ShopFactory>;
  }
  getDeployTransaction(
    _shopTemplate: string,
    _nftTemplate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _shopTemplate,
      _nftTemplate,
      overrides || {}
    );
  }
  attach(address: string): ShopFactory {
    return super.attach(address) as ShopFactory;
  }
  connect(signer: Signer): ShopFactory__factory {
    return super.connect(signer) as ShopFactory__factory;
  }
  static readonly contractName: "ShopFactory";
  public readonly contractName: "ShopFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShopFactoryInterface {
    return new utils.Interface(_abi) as ShopFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShopFactory {
    return new Contract(address, _abi, signerOrProvider) as ShopFactory;
  }
}
